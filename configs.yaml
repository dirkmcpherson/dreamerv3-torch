defaults:

  logdir: null
  traindir: null
  evaldir: null
  offline_traindir: ''
  offline_evaldir: ''
  seed: 0
  steps: 1e6
  eval_every: 3e4
  log_every: 1e3
  eval_episode_num: 10
  reset_every: 0
  device: 'cuda:0'
  compile: True
  precision: 32
  debug: False
  expl_gifs: False
  video_pred_log: True
  visualize_graphs: False

  # Environment
  task: 'dmc_walker_walk'
  size: [64, 64]
  envs: 1
  action_repeat: 2
  time_limit: 1000
  grayscale: False
  prefill: 5e3 # 2500
  eval_noise: 0.0
  reward_EMA: True

  # Model
  dyn_cell: 'gru_layer_norm'
  dyn_hidden: 1024
  # dyn_hidden: 2048
  dyn_deter: 1024
  # dyn_deter: 2048
  dyn_stoch: 32
  dyn_discrete: 32
  dyn_input_layers: 1
  dyn_output_layers: 1
  dyn_rec_depth: 1
  dyn_shared: False
  dyn_mean_act: 'none'
  dyn_std_act: 'sigmoid2'
  dyn_min_std: 0.1
  dyn_temp_post: True
  grad_heads: ['decoder', 'reward', 'cont']
  units: 512
  reward_layers: 2
  cont_layers: 2
  value_layers: 2
  actor_layers: 2
  act: 'SiLU'
  norm: 'LayerNorm'
  encoder:
    {mlp_keys: '$^', cnn_keys: 'image', act: 'SiLU', norm: 'LayerNorm', cnn_depth: 16, kernel_size: 4, minres: 4, mlp_layers: 2, mlp_units: 512, symlog_inputs: True}
  decoder:
    {mlp_keys: '$^', cnn_keys: 'image', act: 'SiLU', norm: 'LayerNorm', cnn_depth: 16, kernel_size: 4, minres: 4, mlp_layers: 2, mlp_units: 512, cnn_sigmoid: False, image_dist: mse, vector_dist: symlog_mse}
  value_head: 'symlog_disc'
  reward_head: 'symlog_disc'
  dyn_scale: '0.5'
  rep_scale: '0.1'
  kl_free: '1.0'
  cont_scale: 1.0
  reward_scale: 1.0
  weight_decay: 0.0
  unimix_ratio: 0.01
  action_unimix_ratio: 0.01
  initial: 'learned'

  # Training
  batch_size: 16
  batch_length: 64
  train_ratio: 512
  pretrain: 100
  model_lr: 1e-4
  opt_eps: 1e-8
  grad_clip: 100
  value_lr: 3e-5
  actor_lr: 3e-5
  ac_opt_eps: 1e-5
  value_grad_clip: 100
  actor_grad_clip: 100
  dataset_size: 1000000
  slow_value_target: True
  slow_target_update: 1
  slow_target_fraction: 0.02
  opt: 'adam'

  # Behavior.
  discount: 0.997
  discount_lambda: 0.95
  imag_horizon: 16
  imag_gradient: 'dynamics'
  imag_gradient_mix: '0.0'
  imag_sample: True
  actor_dist: 'normal'
  actor_entropy: '3e-4'
  actor_state_entropy: 0.0
  actor_init_std: 1.0
  actor_min_std: 0.1
  actor_max_std: 1.0
  actor_temp: 0.1
  expl_amount: 0.0
  eval_state_mean: False
  collect_dyn_sample: True
  behavior_stop_grad: True
  value_decay: 0.0
  future_entropy: False

  # director
  skill_shape: [8, 8]
  manager_layers: 2
  manager_units: 512
  manager_act: 'SiLU'
  manager_norm: 'LayerNorm'
  manager_dist: 'onehot'
  manager_init_std: 1.0
  manager_min_std: 0.1
  manager_max_std: 1.0
  manager_temp: 0.1
  manager_lr: 3e-5
  manager_grad_clip: 100
  manager_grad: reinforce
  manager_actent: 0.5
  manager_actor: {act: "SiLU", norm: "LayerNorm", dist: "onehot", outscale: 0.1}
  expl_reward_weight: 0.1
  extr_reward_weight: 1.0                                                                                                                                      
  worker_actor: {act: "SiLU", norm: "LayerNorm", dist: "normal", outscale: 0.1}

  actor: {layers: 4, units: 512, act: "SiLU", norm: "LayerNorm", dist: "onehot", outscale: 0.1}

  goal_ae_layers: 4
  goal_ae_units: 512
  goal_ae_grad_clip: 100.0
  goal_ae_opt_eps: 1e-6
  goal_ae_lr: 1e-5 # 1e-4
  goal_ae_wd: 1e-2
  goal_vae_kl: True
# goal_encoder: {layers: 4, units: 512, act: elu, norm: layer, dist: onehot, outscale: 0.1, unimix: 0.0, inputs: [goal]}
# goal_decoder: {layers: 4, units: 512, act: elu, norm: layer, dist: mse, outscale: 0.1, inputs: [skill]}
  goal_encoder: 
    {layers: 4, units: 512, act: "SiLU", norm: "LayerNorm", dist: "onehot", outscale: 0.1} # unimix_ratio: 0.0,
  goal_decoder: 
    {layers: 4, units: 512, act: "SiLU", norm: "LayerNorm", dist: "mse", outscale: 0.1} # dist: mse in original
  train_skill_duration: 8
  kl_autoadapt: 
    {impl: mult, scale: 0.0, target: 10.0, min: 1e-5, max: 1.0}

  # Director Debugs
  debug_only_goal_ae: False
  debug_always_update: False
  debug_uiux: False
  debug_user_steps: 100

  # Exploration
  # expl_behavior: 'greedy'
  expl_behavior: 'random'
  expl_until: 0
  expl_extr_scale: 0.0
  expl_intr_scale: 1.0
  disag_target: 'stoch'
  disag_log: True
  disag_models: 10
  disag_offset: 1
  disag_layers: 4
  disag_units: 400
  disag_action_cond: False

dmc_proprio:
  steps: 5e5
  action_repeat: 2
  envs: 4
  train_ratio: 512
  video_pred_log: false
  encoder: {mlp_keys: '.*', cnn_keys: '$^'}
  decoder: {mlp_keys: '.*', cnn_keys: '$^'}

dmc_vision:
  steps: 1e6
  action_repeat: 2
  envs: 4
  train_ratio: 512
  video_pred_log: true
  encoder: {mlp_keys: '$^', cnn_keys: 'image'}
  decoder: {mlp_keys: '$^', cnn_keys: 'image'}

crafter:
  task: crafter_reward
  step: 1e6
  action_repeat: 1
  envs: 1
  train_ratio: 512
  video_pred_log: true
  dyn_hidden: 1024
  dyn_deter: 4096
  # dyn_deter: 2048
  units: 1024
  # reward_layers: 5
  # cont_layers: 5
  # value_layers: 5
  # actor_layers: 5
  reward_layers: 3
  cont_layers: 3
  value_layers: 3
  actor_layers: 3
  # encoder: {mlp_keys: '$^', cnn_keys: 'image', cnn_depth: 96, mlp_layers: 5, mlp_units: 1024}
  encoder: {mlp_keys: '$^', cnn_keys: 'image', cnn_depth: 64, mlp_layers: 5, mlp_units: 512}
  # decoder: {mlp_keys: '$^', cnn_keys: 'image', cnn_depth: 96, mlp_layers: 5, mlp_units: 1024}
  decoder: {mlp_keys: '$^', cnn_keys: 'image', cnn_depth: 64, mlp_layers: 5, mlp_units: 512}
  actor_dist: 'onehot'
  imag_gradient: 'reinforce'

atari100k:
  steps: 4e5
  action_repeat: 4
  envs: 1
  eval_episode_num: 20
  stickey: False
  lives: unused
  noops: 30
  resize: opencv
  actions: needed
  actor_dist: 'onehot'
  train_ratio: 1024
  imag_gradient: 'reinforce'
  time_limit: 108000
  grayscale: True


debug:
  debug: False
  pretrain: 1
  prefill: 1
  batch_size: 10
  batch_length: 20
  eval_every: 300
  log_every: 100
  train_ratio: 100
  ## Atari
  task: 'atari_boxing'
  steps: 4e5
  action_repeat: 4
  envs: 1
  stickey: False
  eval_episode_num: 2
  lives: unused
  noops: 30
  resize: opencv
  actions: needed
  actor_dist: 'onehot'
  imag_gradient: 'reinforce'
  time_limit: 108000
  grayscale: True
  # imag_horizon: 8

MemoryMaze:
  steps: 1e6
  action_repeat: 2
  actor_dist: 'onehot'
  imag_gradient: 'reinforce'
  task: 'MemoryMaze_9x9'




